name: Build & Release Tauri App

on:
  push:
    tags:
      - "v*.*.*" # triggers only on version tags like v1.0.0

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Setup Node
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Setup pnpm
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9  # or whatever you use

      # Cache pnpm store for faster installs
      - name: Cache pnpm store
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      # Setup Rust
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      # Cache Rust build
      - name: Cache Rust
        uses: swatinem/rust-cache@v2

      # Linux deps
      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get update && sudo apt-get install -y \
          libgtk-3-dev libwebkit2gtk-4.0-dev libayatana-appindicator3-dev librsvg2-dev patchelf

      # Install JS deps
      - name: Install frontend dependencies
        run: pnpm install --frozen-lockfile

      # Build the Tauri app
      - name: Build Tauri App
        run: pnpm tauri build

      # Upload the built binaries
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: tauri-${{ matrix.os }}
          path: |
            src-tauri/target/release/bundle/
          retention-days: 7

  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: List downloaded files
        run: ls -R ./dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            ðŸš€ Auto-generated release for ${{ github.ref_name }}  
            Includes builds for Linux, macOS, and Windows.
          draft: false
          prerelease: false
          files: ./dist/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
